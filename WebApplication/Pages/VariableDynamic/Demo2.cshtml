@page
@model WebApplication.Pages.VariableDynamic.Demo2Model
@{
    ViewData["Title"] = "Demo2";
}

<div class="jumbotron bg-light shadow-sm">
    <h1 class="display-4">Odświeżanie wartości zmiennych</h1>
</div>


@{
    List<string> variableNames = Model.mVariables.Keys.ToList();

    const int colCount = 3;
    int rowCount = (int)Math.Ceiling(1.0 * variableNames.Count / colCount);
}


<div class="row justify-content-around py-3">

    @foreach (string name in variableNames)
    {
        VariableTemplate variableTemplate = new VariableTemplate(name);

        <partial name="_Demo2Variable" model=variableTemplate />
    }

</div>


@{
    string variableRequest = "";
    foreach (string v in variableNames)
    {
        variableRequest += "&name=" + Uri.EscapeDataString(v);
    }
}

@section scripts{
    <script>
        function refreshVariables() {
            var ajaxRequest = 'Demo2?handler=Variables@(Html.Raw(variableRequest))';

            $.get(ajaxRequest, function (data) {
                for (i = 0; i < data.length; i++)
                    updateView(data[i].name, data[i]);
            });
        }


        function updateView(idView, variableModel) {
            console.log(idView, variableModel);

            if (variableModel.readError) {
                console.log("read error");

                $("#" + idView + " #error").text(variableModel.readError);
                $("#" + idView + " #error").show();
            } else {
                $("#" + idView + " #error").hide();
            }

            $("#" + idView + " #description").text(variableModel.decription);
            $("#" + idView + " #value").text(variableModel.valueFormatted + ' ' + variableModel.unit);
            $("#" + idView + " #info").text(variableModel.name + ', ' + variableModel.dateTime);
        }

        refreshVariables();
        setInterval(refreshVariables, 2000);
    </script>
}

